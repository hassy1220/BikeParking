<div class="container">
  <div class="text-center">
   <input type="text" id="keyword"><button id="search">検索実行</button>
  </div>


  <div id="map" style="width:100%; height:600px"></div>

  <% flash.each do |message_type, messages| %>
    <% if messages.class == Array %>
      <% messages.each do |message| %>
        <div class="alert alert-<%= message_type %>"><%= message %></div>
      <% end %>
    <% else %>
        <div class="alert alert-<%= message_type %>"><%= messages %></div>
    <% end %>
  <% end %>

  <%= form_with model: @park,url: public_parks_path do |f| %>
  <table class="table">
    <tr>
      <td>Choose file</td>
      <td><%= f.file_field :images,multiple:true,accept:"image/jpg" %></td>
    <tr>
       <td>駐輪場名</td>
       <td><%= f.text_field :name,class:"form-control",placeholder:"駐車場名がわからない場合は(〜市駐車場等)" %></td>
    </tr>
    <tr>
       <td>説明事項</td>
       <td><%= f.text_area :description,class:"form-control",placeholder:"広さ、目的地へのアクセスの良さ等" %></td>
    </tr>
    <tr>
       <td>駐車可能条件</td>
       <td><%= f.collection_radio_buttons :spec, Park.specs_i18n, :first , :last %></td>
    </tr>
    <tr>
      <td>目的地</td>
      <td><%= f.text_field :purpose,class:"form-control",placeholder:"例）キャナルシティ" %></td>
    </tr>
    <tr>
       <td>金額</td>
       <td><%= f.text_field :price %> / <%= f.select :parking_time,*[1..24] %>時間</td>
    </tr>
       <%= f.hidden_field :lat,value:"lat" %>
       <%= f.hidden_field :lng,value:"lng" %>
       <%= f.hidden_field :addressOutput,value:"address" %>
    </table>
    <p class="text-center"><%= f.submit"送信",class:"btn btn-success" %></p>
  <% end %>

</div>
<!--コントローラから受け取った値をhidden形式でviewに渡す。-->
<input type="hidden" id="park_areas" value="<%= @park_areas %>">
<!--投稿ずみの場所にマーカーを設置する為に必要な情報-->
<input type="hidden" id="park_area" value='<%= @park_area %>'>

  <script>
  function initMap() {
    // /43行目が初期マップ位置の拡大状況・44行目が緯度経度で福岡市を表示させる様にしている/
   var opts = {
     zoom: 15,
     center: new google.maps.LatLng(33.589815,130.412306),
     restriction: {
		　　latLngBounds: {
		　　	north: 33.600947,
		　　	south: 33.577563,
		　　	west: 130.386021,
		　　	east: 130.440347
	　 },
	　　	strictBounds: true
　　 }
   };

   var map = new google.maps.Map(document.getElementById("map"), opts);

   // 36行目のid=park_areaのValue値を取得
   var date =document.getElementById("park_area").value
   // 文字列っぽい配列を配列にする方法'[[aaa,aaa],[sss,sss],[sss,fff]]'→[aaa,aaa],[sss,sss],[sss,fff]に変換する
   var date = JSON.parse(date)
   // 配列を順番に繰り返し取り出し、マーカーを設置させる。
   for(var i = 0; i < date.length; i ++ ){
     var m_latlng = new google.maps.LatLng(date[i][1],date[i][0]);
     const marker = new google.maps.Marker({
   　 　 position: m_latlng,
   　 　 map:map,
     });
   };

    map.addListener( "click", function ( event ) {
      // 地図をクリックしたらf.hidden_field :lat,value:"lat"f.hidden_field :lng,value:"lng"のValue値変更
    　document.getElementById("park_lat").value = event.latLng.lat();
    　document.getElementById("park_lng").value = event.latLng.lng();

      // 入力した緯度・経度を取得
      var idoInput = document.getElementById("park_lat").value;
      var keidoInput = document.getElementById("park_lng").value;
      // 緯度・経度をLatLngクラスに変換
      var latLngInput = new google.maps.LatLng(idoInput, keidoInput);

      //GoogleMapsAPIジオコーダ
      var geocoder = new google.maps.Geocoder();

      geocoder.geocode(
        {
          latLng: latLngInput
        },
        function(results, status) {
          var address = "";

          if (status == google.maps.GeocoderStatus.OK) {
          //取得が成功した場合

            //住所を取得します。
            address = results[0].formatted_address;

          } else if (status == google.maps.GeocoderStatus.ZERO_RESULTS) {
            alert("住所が見つかりませんでした。");
          } else if (status == google.maps.GeocoderStatus.ERROR) {
            alert("サーバ接続に失敗しました。");
          } else if (status == google.maps.GeocoderStatus.INVALID_REQUEST) {
            alert("リクエストが無効でした。");
          } else if (status == google.maps.GeocoderStatus.OVER_QUERY_LIMIT) {
            alert("リクエストの制限回数を超えました。");
          } else if (status == google.maps.GeocoderStatus.REQUEST_DENIED) {
            alert("サービスが使えない状態でした。");
          } else if (status == google.maps.GeocoderStatus.UNKNOWN_ERROR) {
            alert("原因不明のエラーが発生しました。");
          }

          //住所の結果表示をします。
          document.getElementById('park_addressOutput').value = address;
          var m_latlng = new google.maps.LatLng(idoInput,keidoInput);
          var marke = new google.maps.Marker({
         　  position: m_latlng,
            map: map,
        　});
        　 // 　新しいところをクリックしたら、古いマーカーは消す
        　map.addListener( "click", function ( event ) {
           marke.setMap(null);
          });
        });
　　});

　　// aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
  // 検索実行ボタンが押下されたとき(住所検索)
    document.getElementById('search').addEventListener('click', function() {
      key = document.getElementById('keyword').value;
  　　var service = new google.maps.places.PlacesService(map);
  　　var LatLngFrom = (33.577563,130.440347);
      var LatLngTo   = (33.577563,130.440347);
      service.textSearch({
          location: new google.maps.LatLng(LatLngFrom, LatLngTo),
          radius: 500,
          query: key
      }, function(results, status) {
          if (status == google.maps.places.PlacesServiceStatus.OK) {
              for (var i = 0; i < results.length; i++) {
                var place = results[i];
                var infowindow = new google.maps.InfoWindow({
                  content: place.name,
                  position: place.geometry.location
                });
                infowindow.open(map);
              }
          }
      });
    });

　　// 検索実行ボタンが押下されたとき(住所検索)
  //   document.getElementById('search').addEventListener('click', function() {
  //     function initAutocomplete() {
  //     //対応させるテキストボックス
  //       var input = document.getElementById('search-text');
  //       //プレイスを検索する領域
  //       var LatLngFrom = new google.maps.LatLng(33.577563,130.440347);
  //       var LatLngTo   = new google.maps.LatLng(33.577563,130.440347);
  //       var bounds = new google.maps.LatLngBounds(LatLngFrom, LatLngTo);
  //   　　//オートコンプリートのオプション
  //       var options = {
  //           types: ['(regions)'],                      // 検索タイプ
  //           bounds: bounds,                            // 範囲優先検索
  //           componentRestrictions: {country: 'jp'}     // 日本国内の住所のみ
  //       };
  //       autocomplete = new google.maps.places.Autocomplete( input, options);
  //     };
  // });

　　// aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

　　// 検索実行ボタンが押下されたとき(住所検索)
    // document.getElementById('search').addEventListener('click', function() {
    //   var place = document.getElementById('keyword').value;
    //   var geocoder = new google.maps.Geocoder();      // geocoderのコンストラクタ

    //   geocoder.geocode({
    //     address: place
    //   }, function(results, status) {
    //     if (status == google.maps.GeocoderStatus.OK) {

    //       var bounds = new google.maps.LatLngBounds();

    //       for (var i in results) {
    //         if (results[0].geometry) {
    //           // 緯度経度を取得
    //           var latlng = results[0].geometry.location;
    //           // 住所を取得
    //           var address = results[0].formatted_address.replace(/^, /, '');

    // 　    　　　  var infowindow = new google.maps.InfoWindow({
    //         　　  content: address,
    //       　　   position: latlng
    //       　  });
    //         　infowindow.open(map);
    //         }
    //       }
    //     } else if (status == google.maps.GeocoderStatus.ZERO_RESULTS) {
    //         alert("見つかりません");
    //     } else {
    //         console.log(status);
    //         alert("エラー発生");
    //     }
    //     map.setCenter(results[0].geometry.location); // 地図の中心を移動
    //     cnt =0;
    //   });
    // });
  };
 </script>
