<div class="container">
  <div id="map" style="width:100%; height:500px"></div>

  <% flash.each do |message_type, messages| %>
    <% if messages.class == Array %>
      <% messages.each do |message| %>
        <div class="alert alert-<%= message_type %>"><%= message %></div>
      <% end %>
    <% else %>
        <div class="alert alert-<%= message_type %>"><%= messages %></div>
    <% end %>
  <% end %>

  <%= form_with model: @park,url: public_parks_path do |f| %>
  <table class="table">
    <tr>
      <td>Choose file</td>
      <td><%= f.file_field :images,multiple:true,accept:"image/jpg" %></td>
    <tr>
       <td>駐輪場名</td>
       <td><%= f.text_field :name,class:"form-control",placeholder:"駐車場名がわからない場合は(〜市駐車場等)" %></td>
    </tr>
    <tr>
       <td>説明事項</td>
       <td><%= f.text_area :description,class:"form-control",placeholder:"広さ、目的地へのアクセスの良さ等" %></td>
    </tr>
    <tr>
       <td>駐車可能条件</td>
       <td><%= f.collection_radio_buttons :spec, Park.specs_i18n, :first , :last %></td>
    </tr>
    <tr>
      <td>目的地</td>
      <td><%= f.text_field :purpose,class:"form-control",placeholder:"例）キャナルシティ" %></td>
    </tr>
    <tr>
       <td>金額</td>
       <td><%= f.text_field :price %> / <%= f.select :parking_time,*[1..24] %>時間</td>
    </tr>
       <%= f.hidden_field :lat,value:"lat" %>
       <%= f.hidden_field :lng,value:"lng" %>
    <tr>
       <td><%= f.submit"送信" %></td>
    </tr>
    </table>
  <% end %>

</div>
<!--コントローラから受け取った値をhidden形式でviewに渡す。-->
<input type="hidden" id="park_areas" value="<%= @park_areas %>">
<!--投稿ずみの場所にマーカーを設置する為に必要な情報-->
<input type="hidden" id="park_area" value='<%= @park_area %>'>

  <script>
   function initMap() {
    // /43行目が初期マップ位置の拡大状況・44行目が緯度経度で福岡市を表示させる様にしている/
   var opts = {
     zoom: 14,
     center: new google.maps.LatLng(33.588807,130.420435),
     restriction: {
		　　latLngBounds: {
		　　	north: 33.604947,
		　　	south: 33.577563,
		　　	west: 130.389021,
		　　	east: 130.450347
	　　	},
	　　	strictBounds: false
　　 }
   };

   var map = new google.maps.Map(document.getElementById("map"), opts);

   // 36行目のid=park_areaのValue値を取得
   var date =document.getElementById("park_area").value
   // 文字列っぽい配列を配列にする方法'[[aaa,aaa],[sss,sss],[sss,fff]]'→[aaa,aaa],[sss,sss],[sss,fff]に変換する
   var date = JSON.parse(date)
   // 配列を順番に繰り返し取り出し、マーカーを設置させる。
   for(var i = 0; i < date.length; i ++ ){
     var m_latlng = new google.maps.LatLng(date[i][1],date[i][0]);
     var marker = new google.maps.Marker({
   　 　 position: m_latlng,
   　 　 map:map,
     });
   };

   // 地図をクリックしたらf.hidden_field :lat,value:"lat"f.hidden_field :lng,value:"lng"のValue値変更
    map.addListener( "click", function ( event ) {
    　document.getElementById("park_lat").value = event.latLng.lat();
    　document.getElementById("park_lng").value = event.latLng.lng();
  　　　//変数lat/lngを宣言し、park_area_lat/lng(ID)のValue値を取得
    　const lat =document.getElementById("park_lat").value;
    　const lng =document.getElementById("park_lng").value;

    　// LatLng(,)に19/20行目で取得した緯度経度を入れる。
    　// クリックしたところにマーカーを表示させる。
    　var m_latlng = new google.maps.LatLng(lat,lng);
    　var marker = new google.maps.Marker({
   　    position: m_latlng,
        map: map
    　});

    // 　function getAddress(latlng) {
    //     var geocoder = new google.maps.Geocoder();
    //   　geocoder.geocode({
    //   　　latLng: latlng
    // 　　}, function(results, status) {
    //   　　if (status == google.maps.GeocoderStatus.OK) {
    //   　　 // results.length > 1 で返ってくる場合もありますが・・・。
    //   　    if (results[0].geometry) {

    //     //  住所を取得(日本の場合だけ「日本, 」を削除)
    //         var address = results[0].formatted_address.replace(/^日本, /, '');
    //   　    };
    //   　　};
    //     )}:
    // 　};
    });
  };
 </script>
